@import 'constants';

:root {
  --key_background: linear-gradient(120deg, #fdfbfbec 0%, #ebedeec7 100%);
  --key_border-color: #{darken($color-addition-background, 10%)};
  --key_border-color__hover: #{darken($color-addition-background, 18%)};
  --key_color: #{$color-primary};
  --key_color__hover: #{lighten($color-primary, 10%)};
  --key_color__alpha: #{rgba(lighten($color-primary, 10%), 0.5)};
  --keyboard_background-color: #{$color-keyboard-background};
  --keyboard_border-color: #{darken($color-keyboard-background, 5%)};
  --keypad_background-color: #{darken($color-keyboard-background, 2%)};
  --keypad_shadow-color: #{rgba(darken($color-keyboard-background, 10%), 0.66)};
  --alternate_background: linear-gradient(to top, #d299c2 0%, #fef9d7 100%);
  --alternate_background__hover: linear-gradient(to top, #d299c2 20%, #e7e2bf 100%);
  --multiplication_background: #{lighten($color-multiplication, 10%)};
  --multiplication_background__hover: #{darken($color-multiplication, 5%)};
  --output_font-size: 1.1rem;
  --controls-menu_background: linear-gradient(to top, #fafafaea 0%, rgba(241, 241, 241, 0.8) 100%);
  --controls-menu_border: #d6d3d3;
}

.keyboard {
  background-color: var(--keyboard_background-color);
  border: 1px solid var(--keyboard_border-color);
  border-radius: 10px;
  box-shadow: 0 18px 32px rgba(0,0,0,0.25), 0 16px 18px rgba(0,0,0,0.2);
  margin: 0 auto;
  padding: 0.5rem;
  text-align: center;

  &.range--10,
  &.range--11,
  &.range--12 {
    font-size: 0.925rem;
  }

  &__header {
    align-items: center;
    border: 0;
    display: flex;
    flex-flow: row nowrap;
    padding: 0.5rem;

    label {
      display: inline-block;
    }
  }

  &__title {
    margin: 0 auto 0 0;
    text-transform: capitalize;
  }

  input,
  select {
    border: 1px solid rgb(243, 243, 252);
    border-radius: 0.25em;
    display: inline-block;
    margin: 0 0.5em;
    text-align: center;
  }

  &--multiplication {
    --key_background: linear-gradient(to top, #fddb92bd 0%, #d1fdffb6 100%);
    --key_border-color: #{lighten($color-multiplication, 10%)};
    --key_border-color__hover: #{darken(saturate($color-multiplication, 2%), 5%)};
    --keyboard_background-color: #{darken($color-multiplication, 10%)};
    --keyboard_border-color: #{darken($color-multiplication, 5%)};
    --keypad_background-color: #{darken($color-multiplication, 2%)};
    --keypad_border-color: #{rgba(lighten($color-multiplication, 10%), 0.66)};
    --keypad_shadow-color: #{rgba(lighten($color-multiplication, 10%), 0.75)};
  }
}

.keypad {
  background-color: var(--keypad_background-color, transparent);
  border: 1px solid var(--keypad_border-color);
  border-collapse: unset;
  border-radius: 1em;
  box-shadow: inset 1px 1px 6px var(--keypad_shadow-color);
  box-sizing: border-box;
  margin: 0 auto;
  padding: 1em;
}

.keypad__key {
  color: var(--key_color);
  padding: 0.25rem;
  position: relative;

  .answer {
    color: currentColor;
    font-size: var(--output_font-size);
    font-weight: bold;
    left: 50%;
    pointer-events: none;
    position: absolute;
    text-shadow: 0 0 3px currentColor;
    top: 50%;
    transition: color 0.75s #{$ease-out-circ}, opacity 0.5s #{$ease-out-circ}, transform 0.5s #{$ease-out-circ};
    transform: translate(-50%, -50%);
    z-index: 1;
  }

  .btn {
    background: var(--key_background);
    border: 1px solid var(--key_border-color);
    border-radius: 0.5rem;
    box-shadow: inset 1px 2px 5px rgba(255, 255, 255, 0.45),
      inset -2px 1px 5px rgba(255, 255, 255, 0.5),
      0 1px 2px rgba(20, 20, 20, 0.25),
      0 2px 3px rgba(20, 20, 20, 0.25);
    box-sizing: border-box;
    color: currentColor;
    cursor: pointer;
    font: normal 0.825rem/1.5 var(--font-family-base, inherit);
    overflow: hidden;
    padding: 0.5rem;
    padding-top: calc(1em + var(--output_font-size));
    text-overflow: ellipsis;
    transition: all 0.333s #{$ease-out-circ};
    user-select: none;
    white-space: nowrap;
    z-index: 2;

    & + .answer {
      filter: blur(4px);
      opacity: 0;
    }

    &:hover,
    &:focus,
    &:active,
    .focus {
      background: var(--key_background__hover, var(--key_background));
      background-position: right center;
      border-color: var(--key_border-color__hover);
      box-shadow: inset 1px 2px 5px rgba(255, 255, 255, 0.45),
        inset -2px 1px 5px rgba(255, 255, 255, 0.5),
        0 0 1px rgba(20, 20, 20, 0.25),
        0 1px 2px rgba(20, 20, 20, 0.25);
      outline: 0 none;
      transform: translate(0, 2px);

      & + .answer {
        filter: blur(2px);
        text-shadow: 0 0 5px currentColor;
        transition-duration: 0.5s;
      }
    }

    &:active {
      animation: none;
      box-shadow: inset 1px 2px 5px rgba(255, 255, 255, 0.33),
        inset -2px 1px 4px rgba(255, 255, 255, 0.45),
        0 0 3px rgba(20, 20, 20, 0.25),
        0 2px 3px rgba(20, 20, 20, 0.3);
      transform: translate(1px, 3px);
    }
  }

  &:focus-within {
    outline: 2px solid rgba(0, 0, 0, 0.05);
  }
}

.show-hints .keypad__key .btn {
  cursor: help;

  /// Peek
  &:hover + .answer,
  &:focus + .answer {
    border-color: var(--key_border-color__hover, currentColor);
    filter: blur(3px);
    opacity: 0.3;
  }
}

.show-hints .keypad__key .btn:active + .answer,
.keypad__key .btn:active + .answer,
.keypad__key .btn.active + .answer {
    color: inherit;
    filter: blur(0);
    opacity: 1;
    transform: translate(-50%, -56%);
}

.whole .btn,
.subtraction .btn {
  background: var(--alternate_background);

  &:hover,
  &:focus,
  &:active {
    background: var(--alternate_background__hover);
  }
}

.mode-select {
  border-radius: var(--btn_border-radius, 0.25em);
  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.125);
}

.mode-select > .btn {
  border-bottom-left-radius: var(--btn_border-radius, 0.25em);
  border-bottom-right-radius: 0;
  border-top-left-radius: var(--btn_border-radius, 0.25em);
  border-top-right-radius: 0;
  color: var(--key_color__alpha);
  font-size: 1.125rem;
  text-shadow: 1px 1px 1px rgba(255, 255, 255, 0.5);

  & + .btn {
    border-left-width: 0;
    border-radius: 0;
    border-right-width: 0;
  }

  & + .btn:last-child {
    border-width: var(--btn_border-width, 1px);
    border-bottom-right-radius: var(--btn_border-radius, 0.25em);
    border-top-right-radius: var(--btn_border-radius, 0.25em);
  }

  &:active,
  &.active {
    background: var(--btn_background__hover);
    box-shadow: inset 0 -1px 3px rgba(0, 0, 0, 0.05), inset 1px 1px 3px rgba(255, 255, 255, 0.25);
    text-shadow: 0 0 4px var(--key_color__alpha);
  }
}

.mode-select .btn:hover,
.mode-select .btn:focus,
.mode-select .btn:active,
.mode-select .btn:last-child:hover,
.mode-select .btn:last-child:focus,
.mode-select .btn:last-child:active {
  border-bottom-width: 0;
  border-top-width: 2px;
  box-shadow: inset 0 -1px 2px rgba(0, 0, 0, 0.125), inset 1px 1px 2px rgba(255, 255, 255, 0.125);
  color: var(--key_color__hover);
  text-shadow: -1px -1px 1px rgba(0, 0, 0, 0.05);
}

.controls {
  overflow: visible;
  position: relative;

  &__menu {
    align-items: center;
    background: var(--controls-menu_background);
    border: var(--btn_border-width) solid var(--controls-menu_border);
    border-radius: var(--btn_border-radius);
    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
    display: flex;
    flex-flow: row wrap;
    padding: 0.5rem;
    position: absolute;
    right: 0;
    width: 10rem;
    z-index: 100;

    input {
      flex-grow: 1;
    }
  }
}

@supports (backdrop-filter: none) {
	.controls__menu {
		backdrop-filter: blur(1px);
	}
}